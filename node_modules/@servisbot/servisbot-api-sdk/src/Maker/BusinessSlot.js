const logger = require('@servisbot/sb-logger');
/**
 * BusinessSlot - a slot which can be resolved in multiple ways.
 * @class
 *
 * @param {Object} businessSlot
 * @param {string} businessSlot.name - the name of the slot you are making
 * @param {Maker.APIParam} businessSlot.target - location in fufillment this filled value will go
 * @param {String[]} businessSlot.validation - (future)
 * @param {String[]} businessSlot.promptMessages - Messages to use during slot elicitation
 * @param {Maker.Resolver[]} businessSlot.resolvers - resolvers to use on this Business Slot
 * @returns {Maker.BusinessSlot} a new business slot instance
 */
class BusinessSlot {
  constructor({
    name, target, validation, promptMessages, resolvers, errorMessages, required
  }) {
    if (target) {
      logger.warn(`Target is deprecated - use {${this.name}} in fulfilment APIs to reference this slots value.`);
    }
    this.name = name;
    this.validation = validation;
    this.promptMessages = promptMessages;
    this.resolvers = resolvers || [];
    this.errorMessages = errorMessages;
    this.required = (typeof required === 'undefined') ? true : required;
  }

  addResolver(resolver) {
    this.resolvers.push(resolver);
  }
}

module.exports = BusinessSlot;
