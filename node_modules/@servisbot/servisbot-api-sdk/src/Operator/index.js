const LexLib = require('./Lex');
const DialogflowLib = require('./Dialogflow');
const WatsonLib = require('./Watson');

module.exports = function OperatorLib(logger) {
  // Private base class Operator
  class Operator {
    constructor({ bot, worker } = {}) {
      this.bot = bot; // used by both
      this.worker = worker; // used by BI Worker
      this.targetConfig = {};
      this.runtimeName = 'generic';
    }

    // lex doesn't support [0-9] [_, -]
    // Dialogflow also has characters it won't support
    // in our short ids replace _ or - with a, 1 with b, 2 with c, etc..
    static formatBotName(name) {
      let id = name.replace(/[_-]/g, 'a');
      // Remove the srn.worker prefix
      id = id.replace(/^srn\.worker\./, '');
      // remove the :::$type:::$published|draft string
      id = id.replace(/:::[a-z0-9-]+:::[a-z0-9-]+$/gi, '');
      // we should now be left with just the worker ID
      id = id.split('');
      id = id.map((char) => {
        if (char.match(/[0-9]/)) {
          return String.fromCharCode(char.charCodeAt() + 50);
        }
        return char;
      });
      return id.join('');
    }
  }

  const Lex = LexLib(logger, Operator);
  const Dialogflow = DialogflowLib(logger, Operator);
  const Watson = WatsonLib(logger, Operator);
  return {
    /**
     * @namespace Operator
     * @returns {Operator}
     */
    Operator: {
      Lex,
      Dialogflow,
      Watson
    }
  };
};
