/**
 * API - A BaaS API request - can be used with resolvers or Maker.BusinessIntent fulfillment
 * @class
 *
 * @param {Object} api
 * @param {string} api.Alias - The Alias that will be used to invoke the APIs
 * @param {string} api.Endpoint - The URl of the resource we are requesting. Use ${param} in combination with Maker.APIParam.URLParam to inject params.
 * @param {Object} api.RequestMapping - A map of Maker.APIParam. Maps values into the request from context before being sent.
 * @param {Object} api.ResponseMapping - A map of Maker.APIParam. Maps values from the request into context after a response has been received.
 * @param {Object} api.Headers - A map of Headers. Use ${param} in combination with Maker.APIParam.HeaderParam to inject content.
 * @param {string} api.Method - HTTP Method of the request
 * @param {Object} api.Body - HTTP request Body for the request. Hardcode content here, or inject content later by setting params on api.RequestMapping
 * @returns {Maker.API}
 */
class API {
  constructor({
    Alias, Endpoint, RequestMapping, ResponseMapping, Headers, Body, Method, Actions
  }) {
    this.Alias = Alias;
    this.Endpoint = Endpoint;
    this.RequestMapping = RequestMapping || {};
    this.ResponseMapping = ResponseMapping || {};
    this.Headers = Headers;
    this.Method = Method || 'GET';
    this.Body = Body || {};
    this.Actions = Actions || {};
    return this;
  }
}

module.exports = API;
