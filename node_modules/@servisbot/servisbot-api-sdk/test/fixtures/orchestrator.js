/* eslint-disable no-template-curly-in-string */
const Promise = require('bluebird');
const Logger = require('@servisbot/sb-logger');
const ServisBotApiSdk = require('../../src/ServisBotApiSdk');


const sbapi = ServisBotApiSdk(null, null, Promise, Logger);

const { Maker } = sbapi;
const api = new Maker.API({
  endpoint: 'http://servisbot.com/api',
  method: 'post',
  requestMapping: {
    todo: new Maker.APIParam.JSONBodyPath({ name: 'todo', path: 'account' })
  }
});
const slot = new Maker.BusinessSlot({
  name: 'account',
  target: api.requestMapping.todo,
  validation: ''/* validation */
});
slot.addResolver(new Maker.Resolver(
  { name: 'byAccountNumber', slotType: new Maker.SlotType.Number(), apiDefinition: api }
));

const businessRule = 'todo == true';

const businessIntent = new Maker.BusinessIntent({
  name: 'sendMoney',
  api,
  businessSlots: [slot],
  businessRules: [businessRule],
  successMessages: ['Ok i will transfer money']
});

const userIntents = [
  new Maker.UserIntent({
    name: 'sendMoney',
    description: 'An intent to send money to somebody',
    utterances: ['send monies to ${account}']
  })
];

const orchestrator = new Maker.Orchestrator({
  businessIntent,
  responseVoice: new Maker.ResponseVoice.GenericAdvisorResponse(),
  promptStrategy: new Maker.PromptStrategy.FlowStrategy(),
  contextMapping: { a: 1 },
  userIntents
});

module.exports = orchestrator;
