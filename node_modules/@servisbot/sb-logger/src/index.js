/**
 * Instance logger is a version of the sb-logger that can be instantiated like
 * a normal JS class:
 *
 * const logger = new Logger(...);
 *
 * Once an instance is created the regular logging methods are available.
 *
 * This way of using the logger allows for separate correlationIds in scenarios
 * where multiple events are being handled at once.
 */
const InstanceLogger = require('./instance-logger');

/**
 * Global logger is a way of making the sb-logger more fault tolerant. These
 * methods can be called on the logger without instantiating it to make it
 * less likely to be the cause of failure:
 *
 * const Logger = require('sb-logger');
 * Logger.info('Hello, world'); // this is fine
 *
 * This way of using the logger is useful for drop in replacement of existing
 * loggers in places where dependency injection of the logger is not performed.
 */
const GlobalLogger = require('./global-logger')();

/**
 * Adding global logger methods to exported object.
 */
const logger = InstanceLogger;
Object.keys(GlobalLogger).forEach((func) => {
  logger[func] = GlobalLogger[func];
});

module.exports = logger;
