const LogLevel = require('./log-level');
const CorrelationId = require('./correlation-id');
const SharedLogger = require('./shared-logger');

module.exports = () => {
  let correlationId;
  let logLevel;

  const getLogLevel = () => LogLevel.getValidLogLevel(logLevel);
  const getCorrelationId = () => CorrelationId.getValidCorrelationId(correlationId);

  const debug = (...args) => SharedLogger.debug(getLogLevel(), getCorrelationId(), args);
  const info = (...args) => SharedLogger.info(getLogLevel(), getCorrelationId(), args);
  const warn = (...args) => SharedLogger.warn(getLogLevel(), getCorrelationId(), args);
  const error = (...args) => SharedLogger.error(getLogLevel(), getCorrelationId(), args);

  const setLogLevel = (newLogLevel) => {
    if (LogLevel.isValid(newLogLevel)) {
      logLevel = newLogLevel;
    } else {
      warn(`Attempted to set invalid log level. Using Existing: ${getLogLevel()}`);
    }
  };

  const setCorrelationId = (newCorrelationId) => {
    if (CorrelationId.isValid(newCorrelationId)) {
      correlationId = newCorrelationId;
    } else {
      warn(`Attempted to set invalid correlation id. Using Existing: ${getCorrelationId()}`);
    }
  };

  return {
    getLogLevel,
    setLogLevel,

    getCorrelationId,
    setCorrelationId,

    debug,
    info,
    warn,
    error,
  };
};
